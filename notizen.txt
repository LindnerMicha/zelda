

|
|
|      Y
|
|
+
                x
        -------------- +


gedrueckt = pygame.key.get_pressed()
if gedruekt[pygame.K_Space]:
    .......



    def zeichnen(liste):
    global step_rechts, step_links, step_forward, step_backward
    if step_rechts == 8:
        step_rechts = 0
    if step_links == 8:
        step_links = 0
    if step_forward == 8:
        step_forward = 0
    if step_backward == 8:
        step_backward = 0

    if player_state[0]:
        screen.blit(linksgehen[step_links // 3], (playerX,playerY))
    if player_state[1]:
        screen.blit(rechtsgehen[step_rechts // 3], (playerX,playerY))
    if player_state[2]:
        screen.blit(stehen, (playerX, playerY))
    if player_state[3]:
        screen.blit(backwardgehen[step_backward // 3], (playerX, playerY))
    if player_state[4]:
        screen.blit(forwardgehen[step_forward // 3], (playerX, playerY))

    pygame.display.update()








    import random
import pygame as pg

pg.init()

blocksize = 30
blocks = 15

window = pg.display.set_mode((blocksize*blocks, blocksize*blocks))
screen = pg.display.get_surface()

colors = {
    'green': (0, 205, 0),
    'blue':  (0, 0, 205),
    'red':   (205, 0, 0)
}

def blockolize():
    for x in range(blocks):
        for y in range(blocks):
            screen.fill(random.choice(colors.values()),
                        pg.Rect( (x*blocksize, y*blocksize),
                                 (blocksize, blocksize) ))

blockolize()
pg.display.update()

playing = True
while playing:
    for event in pg.event.get():
        if event.type == pg.QUIT:
            playing = False
        elif event.type == pg.MOUSEBUTTONDOWN:
            blockolize()
            pg.display.update()Ã¤